{
  "app": {
    "spinnerText": "Loading"
  },
  "navbar": {
    "home": "Home",
    "about": "About",
    "skills": "Skills",
    "contact": "Contact",
    "lang": "Language",
    "darkMode": "Dark mode"
  },
  "about": {
    "title": "About",
    "subtitle": "Web and mobile application developer",
    "intro": "My journey as a developer began in the military, where I spent a year and a half mastering full-stack development under high-pressure conditions while completing my studies. After graduating, I joined Coto CICSA, where I focused on front-end development (later expanding to back-end), creating scalable, user-centric web solutions with Angular and modern technologies.\n\nCurrently, as an Angular Developer contractor for a tech company in Uruguay serving a USA-based client, I specialize in implementing the latest Angular features, optimizing performance, and adhering to best practices like smart/dumb components, OnPush strategy, and Signals. My expertise in efficient and scalable code ensures impactful, client-focused results for enterprise-level products.\n\nDriven by a passion for growth, Iâ€™ve earned certifications like React.js, as well as many other online courses, to enhance my versatility and continue delivering exceptional web solutions.",
    "items": {
      "years": "years",
      "growth": "Constant growth",
      "diploma": "Associate's degree in Systems Analysis",
      "ready": "Ready to move"
    }
  },
  "skills": {
    "title": "Skills",
    "progressTitle": "Progress",
    "buttons": {
      "repo": "Repository",
      "deploy": "Launch"
    },
    "tabs": {
      "tools": "Tools",
      "metds": "Methodologies"
    },
    "type": {
      "project": "Project",
      "codeFragment": "Code Fragment"
    },
    "examples": {
      "ang0": "The importance of Lazy Loading plays a crucial role in the scalability of an Angular Application. Proper implementation and design can lead to serious performance gains and better compile budgets.",
      "ang1": "In an Angular application, smart components are responsible for state management, complex logic, and communication with services, offering centralized control for efficient performance optimization. By strategically managing state and implementing change detection strategies, smart components can minimize unnecessary re-renders, resulting in significant performance gains. Dumb components, on the other hand, focus solely on UI rendering and user interactions, promoting reusability, readability, ease of testing, isolation, and simplified debugging. Separating these roles enhances maintainability and development efficiency while ensuring a clear separation of concerns in the application architecture, ultimately contributing to a smoother and more performant user experience.",
      "ang2": "Renderer2 is a platform-agnostic service in Angular that facilitates safe and efficient manipulation of the Document Object Model (DOM). It abstracts DOM operations, ensuring security against vulnerabilities like XSS, optimizing performance, and aligning with Angular's change detection system. With Renderer2, you can create and modify DOM elements, set attributes, styles, and classes, attach event listeners, and seamlessly integrate with Angular's animation system, making it an essential tool for managing the DOM in Angular applications.",
      "ang3": "`OnPush` change detection is a strategy in Angular that optimizes performance by triggering change detection only when specific conditions are met. It's based on the idea that components with this strategy will only check for changes and update their view when their input properties change or when an explicit event occurs. This approach reduces the overhead of change detection and can significantly improve the efficiency of an application, particularly for scenarios where frequent updates aren't necessary. The strategy is applied in the metadata of the individual component, enabling them to control when change detection runs, leading to better application performance.",
      "ang4": "Portfolio project. A showcase of my skills, experiences and more about myself. Here, I use all the ideas previously mentioned, plus much more content using RxJs and an Nx-type of project structure.",
      "ang5": "The objective of this project is to create a platform inspired by Medium (all rights reserved to them) while implementing advanced techniques such as zoneless architecture instead of zone.js.",
      "rea0": "Running React Application, which works as an online e-commerce. Using Context, Bootstrap, SweetAlert and firebase as a database. Hosted on Netlify.",
      "vue0": "A running Vue 3 App designed for a project of mine, which connects to an API built using NodeJs and Express with an instance of MongoDB for storage. This app was later replaced with a ported version built using Angular 15.",
      "node0": "Built using Node and Express, this API handles data management of the Vue 3 project. Experience with OAuthstandard, OpenID and auth tokens. Experience with streams and buffers as well. Repo is private.",
      "nest0": "API that replaces the old nodejs api, and uses various tools such as MongoDB, transactions and RxJS to fully support async operations. Repo is private.",
      "nest1": "Supportive Web API that helps retrieve information regarding the project (primarily backoffice-related data). It connects to a Dockerized MongoDB cluster and supports transactions.",
      "net0": "The Military-related API, built on .NET Core using Entity Framework, serves as a central platform for managing military-related data and processes. Key features include:\n1. **Personnel Qualification**: The API enables access to military personnel qualification data, including training, certifications, ranks, and specializations. Users can view and update their records, while role-based access control ensures data security.\n2. **Data Storage**: Utilizing Entity Framework, the API efficiently stores and manages military data, ensuring data integrity and seamless database querying.\n3. **Authentication and Authorization**: Secure authentication and role-based authorization mechanisms are in place to protect sensitive data, ensuring that only authorized personnel can access and manage information.\n5. **Analytics and Reporting**: The API offers analytics and reporting features, facilitating data-driven decision-making and progress tracking for military operations.\n6. **Versioning and Documentation**: The API is versioned and well-documented, making it easy for developers to integrate and use, while ensuring compatibility and ease of maintenance."
    }
  },
  "cv": {
    "subTitles": {
      "experiences": "Experiences",
      "education": "Education",
      "languages": "Languages"
    },
    "exps": {
      "coto2": "As a Semi-Senior Front-End Developer specializing in Angular, I'm playing a vital role in leading and contributing to various projects. In addition to mentoring junior developers and fostering their growth through code reviews and knowledge-sharing, I've made substantial contributions to enhancing code efficiency and improving application speed. I've also excelled in implementing responsive web designs, ensuring a superior user experience and optimized performance. My collaboration with the design team has resulted in visually appealing and user-friendly web interfaces. Actively participating in team discussions, I'm consistently providing innovative solutions. My commitment to staying current with the latest Angular and front-end technologies remains unwavering. I'm enthusiastic about continuing my mentorship role and contributing to the team's sustained success.",
      "coto": "In this role, I focused on developing Angular applications, giving special attention to ensuring robust security measures. I implemented best practices like using Renderer2 for secure DOM manipulation and applied lazy loading techniques for improved application performance and a better user experience. Alongside maintaining and updating existing Angular applications, I explored backend functionalities, collaborating with Entity Framework to broaden my skill set. Additionally, I took on a mentoring role, guiding a coworker in Angular to support their growth and proficiency in the technology.",
      "army": "During my tenure in this role, I was responsible for continuously enhancing, expanding, and creating a diverse array of tools tailored to meet the specific requirements of the Army. This multifaceted role required me to work on both the backend, including extending the capabilities of three pre-existing web APIs, and the frontend. Notably, for frontend development within an existing Laravel project, I primarily utilized jQuery to implement additional functionalities.",
      "freelance": "As a freelancer, I collaborated with personal contacts on a variety of projects. While primarily working independently, I also took the initiative to develop two of my own projects. I used Vue.js, including both Vue 2 and Vue 3, for front-end development. For the backend, I employed MongoDB to manage and store data effectively. This experience allowed me to gain valuable insights into web development and showcase my ability to work with different technologies and clients.",
      "switch": "As a now expert Angular Developer, I specialize in developing a large-scale front-end web application for a USA-based client. I was specifically hired to bring the latest Angular features into the project and to optimize existing code, aligning with my expertise in optimization and better coding standards. My approach focuses on implementing scalable components using the dumb/smart component architecture, the OnPush change detection strategy, and the new Signals API. Leveraging tools like Angular Material and Tailwind CSS, I ensure responsive, user-friendly designs. Collaborating across time zones with Agile teams, I actively contribute to high-quality solutions while staying updated with the latest Angular advancements. I'm dedicated to clean, efficient code and fostering best practices to achieve project success."
    },
    "education": {
      "coderhouse": "This intensive 4-month course provides a comprehensive exploration of React.js, with a broader focus on front-end development and the fundamental concepts of JavaScript. Throughout the program, I actively engaged in practical learning by conceptualizing, designing, and building a fully functional e-commerce web application. This hands-on experience included extensive use of React.js for dynamic front-end development, coupled with Firebase as a robust and scalable database solution. By successfully deploying this e-commerce web app, I gained practical proficiency in crafting interactive user interfaces, managing real-time data, and ensuring a seamless online shopping experience, thus solidifying my expertise in both React.js and front-end development as a whole.",
      "ort": "The Associate's Degree in System Analysis with a Specialization in Web Development is a comprehensive program that blends core system analysis principles with a specialized focus on web development. Students gain a strong foundation in systems architecture, modeling, and optimization, while also becoming proficient in web technologies, programming languages, and web design. This degree equips graduates with the skills to work as system analysts with a distinct emphasis on web-based technologies, making them valuable assets in industries ranging from e-commerce to healthcare. They excel at developing responsive websites, managing databases, ensuring web security, and integrating e-commerce functionality, all while understanding project management fundamentals to oversee web development projects from start to finish.",
      "udemy": {
        "ang": "This course is structured to guide learners through practical applications in each section, facilitating the acquisition and mastery of specific topics. As the course progresses, participants will advance in building increasingly complex applications, seamlessly developing skills in creating directives, components, pipes, services, and routes. In addition to Angular, the course also delves into various other relevant technologies, including Firebase, Firebase RESTful services, Firebase Cloud Functions, CRUD operations, TypeScript, ECMAScript 6, Reactive-Extensions, Sockets, Ionic 5, Atom packages/Visual Studio Code Extensions, Angular CLI, AngularFire, Local Storage, Bootstrap 4, Spotify API, Youtube API, and other technologies of importance. Students will become proficient in this powerful and fast framework, benefiting from comprehensive code introductions, problem-solving logic guided by best practices, and adherence to Angular's official style guide. While there is some introductory theory, the course primarily consists of hands-on experience in building various small to medium-sized scalable applications, ultimately fostering expertise in Angular."
      }
    },
    "langs": {
      "spanish": {
        "desc": "Spanish",
        "level": "Native"
      },
      "german": {
        "desc": "German",
        "level": "Beginner"
      },
      "english": {
        "desc": "English",
        "level": "Native"
      }
    },
    "buttons": {
      "details": {
        "expanded": "Less",
        "hidden": "More"
      }
    }
  }
}